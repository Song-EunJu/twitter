{"version":3,"sources":["fbInstance.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","refreshUser","userObj","useState","displayName","newDisPlayName","setNewDisPlayName","attachment","setAttachment","user","setUser","onProfileSubmit","event","a","preventDefault","updateProfile","useEffect","mounted","collection","where","uid","onSnapshot","snapshot","userArray","docs","map","doc","id","data","onPhotoSubmit","photo","fileRef","ref","child","putString","getDownloadURL","console","log","undefined","profileObj","creatorId","createdAt","Date","now","add","update","photoURL","className","onSubmit","src","alt","width","height","type","placeholder","autoFocus","value","onChange","target","style","marginTop","htmlFor","icon","faPlus","accept","theFile","files","fileReader","FileReader","onloadend","result","currentTarget","readAsDataURL","opacity","backgroundImage","marginBottom","marginRight","faCheck","onClick","fontSize","faTimes","signOut","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","delete","attachmentUrl","refFromURL","toggleEditing","faTrash","faPencilAlt","TweetFactory","tweet","setTweet","attachmentRef","uuidv4","response","maxLength","reader","finishedEvent","Home","tweets","setTweets","orderBy","tweetArray","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","args","useCallback","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ee4fc9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService, storageService} from \"fbInstance\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const [newDisPlayName, setNewDisPlayName]=useState(userObj.displayName);\r\n    const [attachment, setAttachment]=useState(\"\");\r\n    const [user, setUser] = useState(userObj);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target:{value}}=event;\r\n        setNewDisPlayName(value);\r\n    }\r\n\r\n    const onProfileSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisPlayName){\r\n            await userObj.updateProfile({\r\n                displayName:newDisPlayName,\r\n            })\r\n        }\r\n        refreshUser();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let mounted=true;\r\n        if(mounted){\r\n            dbService.collection(\"user\").where(\"creatorId\",\"==\",userObj.uid).onSnapshot(snapshot => {\r\n                const userArray = snapshot.docs.map(doc => ({\r\n                    id:doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setUser(userArray[0]);\r\n            })\r\n            refreshUser();\r\n        }\r\n        return () => mounted=false;\r\n    },[refreshUser,userObj.uid]);\r\n\r\n    const onPhotoSubmit = async(event) => {\r\n        event.preventDefault();\r\n        let photo=\"\";\r\n        if(attachment!==\"\"){\r\n            const fileRef=storageService.ref().child(`profiles/${userObj.uid}`);\r\n            await fileRef.putString(attachment, \"data_url\");\r\n            photo=await fileRef.getDownloadURL();\r\n            console.log(photo);\r\n        }\r\n        if(user===undefined){ \r\n            const profileObj = { \r\n                photo,\r\n                creatorId:userObj.uid,\r\n                createdAt:Date.now()\r\n            }\r\n            await dbService.collection(\"user\").add(profileObj)\r\n        }\r\n        else{ \r\n            await dbService.doc(`user/${user.id}`).update({\r\n                photo\r\n            });\r\n        }\r\n        await userObj.updateProfile({\r\n            photoURL:photo\r\n        })\r\n        refreshUser();\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    const fileChange = (event) => {\r\n        const {target:{files}}=event;\r\n        const theFile = files[0];\r\n\r\n        if(theFile){\r\n            const fileReader = new FileReader();\r\n            fileReader.onloadend = (files) => {\r\n                const {currentTarget:{result}}=files;\r\n                setAttachment(result);\r\n                console.log(attachment);\r\n            }\r\n            fileReader.readAsDataURL(theFile);\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return (\r\n           <div className=\"container\">\r\n                <form onSubmit={onProfileSubmit} className=\"profileForm\">\r\n                    { userObj.photoURL && \r\n                        <div className=\"profile\">\r\n                            <img src={userObj.photoURL} alt=\"0\" width=\"70px\" height=\"70px\"/>\r\n                            <br/>\r\n                        </div>\r\n                    }\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Display name\"\r\n                        autoFocus\r\n                        value={newDisPlayName==null ? \"\" : newDisPlayName}\r\n                        onChange={onChange}\r\n                        className=\"formInput\"\r\n                    />\r\n                    <input \r\n                        type=\"submit\" \r\n                        value=\"Update Profile\"\r\n                        className=\"formBtn\"\r\n                        style={{\r\n                            marginTop: 10,\r\n                        }}\r\n                    />\r\n                </form>\r\n                \r\n                <form onSubmit={onPhotoSubmit}>                    \r\n                    <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                        <span>Update photo</span>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </label>\r\n                    <input\r\n                        id=\"attach-file\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={fileChange}\r\n                        style={{\r\n                            opacity: 0,\r\n                        }}\r\n                    />\r\n\r\n                    {attachment && (\r\n                        <div className=\"factoryForm__attachment\">\r\n                            <img\r\n                                src={attachment}\r\n                                style={{\r\n                                    backgroundImage: attachment,\r\n                                    marginBottom:20,\r\n                                }}\r\n                                alt=\"0\"\r\n                            />\r\n                            <div className=\"factoryForm__clear\" >\r\n                                <input \r\n                                    type=\"submit\" \r\n                                    value=\"Update Profile\"\r\n                                    style={{\r\n                                        marginTop: 10,\r\n                                        marginBottom: 10,\r\n                                        marginRight: 10\r\n                                    }}\r\n                                />\r\n                                <FontAwesomeIcon icon={faCheck} />\r\n\r\n                            </div>\r\n                            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                                <span style={{\r\n                                    fontSize:14.3333\r\n                                }}>Remove</span>\r\n                                <FontAwesomeIcon icon={faTimes} />\r\n                            </div>\r\n                        </div>\r\n                    )}\t  \r\n                </form>\r\n    \r\n                <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n    \t            Log Out\r\n                </span>\r\n            </div>\r\n        \r\n    );\r\n}\r\nexport default Profile;","import { authService } from \"fbInstance\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    \r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {target : { name, value }} = event;\r\n        if(name === \"email\")\r\n            setEmail(value)\r\n        else if(name === \"password\")\r\n            setPassword(value)\r\n    }\r\n    \r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if(newAccount){\r\n               await authService.createUserWithEmailAndPassword(email,password);\r\n            }\r\n            else{\r\n                await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n        } catch(error){\r\n            setError(error.message);\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required \r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input type=\"submit\" \r\n                       className=\"authInput authSubmit\"\r\n                       value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>  \r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\nexport default AuthForm;","import React from \"react\";\r\nimport {authService, firebaseInstance} from \"fbInstance\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const { target : {name}} = event;\r\n        let provider;\r\n        if(name===\"google\"){\r\n            provider=new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        else if(name===\"github\"){\r\n            provider=new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth;\r\n\r\n","import { dbService, storageService } from \"fbInstance\";\r\nimport React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok=window.confirm(\"Are you sure you want to delete this tweet?\");\r\n        if(ok){\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            if(tweetObj.attachmentUrl!==\"\")\r\n                await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text:newTweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    \r\n    const onChange = (event) => {\r\n        const { target : {value}} = event;\r\n        setNewTweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n           {\r\n               editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Edit your tweet\" \r\n                            value={newTweet} \r\n                            required\r\n                            autoFocus \r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n               ):(\r\n                <>\r\n                    <h4>{tweetObj.text}</h4>\r\n                    {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} alt=\"0\"/>}\r\n                    { isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n               )\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tweet;","import { dbService, storageService } from \"fbInstance\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({userObj}) => {\r\n    const [tweet, setTweet]=useState(\"\");\r\n    const [attachment, setAttachment]=useState(\"\");\r\n\r\n    const onSubmit = async(event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const tweetObj={\r\n            text:tweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target : {value}} = event;\r\n        setTweet(value);\r\n    }\r\n\r\n    const onFileChange =(event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget:{result}} = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n        if(theFile)\r\n            reader.readAsDataURL(theFile); \r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return (\r\n    \r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={tweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n    \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        alt=\"0\"\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\t      \r\n        </form>\t   \r\n    )\r\n}\r\nexport default TweetFactory;","import { dbService } from \"fbInstance\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Tweet from \"../components/Tweet\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [tweets, setTweets]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        let mounted=true;\r\n        if(mounted){\r\n            dbService.collection(\"tweets\").orderBy(\"createdAt\",\"desc\").onSnapshot(snapshot => {\r\n                const tweetArray = snapshot.docs.map(doc => ({\r\n                    id:doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setTweets(tweetArray);\r\n            })\r\n        }\r\n        return () => mounted=false;\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map(tweet => (\r\n                    <Tweet \r\n                        key={tweet.id} \r\n                        tweetObj={tweet} \r\n                        isOwner={tweet.creatorId===userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}  \r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navigation = ({userObj}) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({refreshUser,isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                <>\r\n                { isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route> \r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                    </div>\r\n                ): (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                    </>\r\n                )}\r\n                </>\r\n            </Switch>\r\n        </Router>   \r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React,{useEffect, useState, useCallback} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbInstance\";\n\nfunction App() {\n  const [ init, setInit ] = useState(false);\n  const [ userObj, setUserObj ] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      }\n      else\n        setUserObj(null);\n      setInit(true);\n    });\n  },[]);\n\n  \n  const refreshUser = useCallback(async () => {\n    const user=authService.currentUser;\n    setUserObj({\n        displayName:user.displayName,\n        photoURL:user.photoURL,\n        uid:user.uid,\n        updateProfile: (args) => user.updateProfile(args)\n    });\n  },[setUserObj]);\n  \n  return (\n    <>\n      { \n        init ? (\n          <AppRouter\n              refreshUser={refreshUser}\n              isLoggedIn={Boolean(userObj)} \n              userObj={userObj}\n          /> \n        )\n      : \"Initializing\"}\n      <br/>\n      <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n    </>\n  ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}